@using MVC2.Helper
@model PaginatedList<MVC2.Models.Student>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            <div class="form-group row">
                <label for="FromDate" class="col-sm-2 col-form-label">Find by name:  </label>
                <div class="col-sm-2">
                    <input class="form-control" type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
                </div>
            </div>
            <div class="form-group row">
                <label for="FromDate" class="col-sm-2 col-form-label">From Date </label>
                <div class="col-sm-2">
                    <input type="date" value="@ViewData["FromDate"]" class="form-control" autocomplete="off" placeholder="YYYY-MM-DD" id="FromDate" name="FromDate" />
                </div>
                <label for="ToDate" class="col-sm-2 col-form-label">To Date </label>
                <div class="col-sm-2">
                    <input type="date" value="@ViewData["ToDate"]" class="form-control" autocomplete="off" placeholder="YYYY-MM-DD" id="ToDate" name="ToDate" />
                </div>
            </div>
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["nameS"]" asp-route-currentFilter="@ViewData["CurrentFilter"]"> Name </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["dobS"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Date Of Birth</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["gradeS"]Grade" asp-route-currentFilter="@ViewData["CurrentFilter"]">Grade</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)  @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DOB)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Grade.GradeName)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.StudentId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.StudentId">Details</a> |
                    <a asp-action="Delete" onclick="return confirm('Are You Sure You Want To Delete?')" asp-route-id="@item.StudentId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   asp-route-FromDate="@ViewData["FromDate"]"
   asp-route-ToDate="@ViewData["ToDate"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   asp-route-FromDate="@ViewData["FromDate"]"
   asp-route-ToDate="@ViewData["ToDate"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
